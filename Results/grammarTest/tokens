        [0001, 0001] (0024,   function) {function}
        [0001, 0010] (0000,         id) {a}
        [0001, 0011] (0022,    opParen) {(}
        [0001, 0012] (0000,         id) {b}
        [0001, 0013] (0045,      comma) {,}
        [0001, 0015] (0000,         id) {c}
        [0001, 0017] (0008,     isType) {is}
        [0001, 0020] (0002,    typeInt) {int}
        [0001, 0023] (0045,      comma) {,}
        [0001, 0025] (0000,         id) {d}
        [0001, 0026] (0045,      comma) {,}
        [0001, 0028] (0000,         id) {e}
        [0001, 0030] (0008,     isType) {is}
        [0001, 0033] (0003,   typeReal) {real}
        [0001, 0037] (0023,    clParen) {)}
        [0001, 0039] (0008,     isType) {is}
        [0001, 0042] (0006,  typeArray) {array}
        [0001, 0047] (0029, opBrackets) {[}
        [0001, 0048] (0030, clBrackets) {]}
        [0001, 0050] (0009,         of) {of}
        [0001, 0053] (0002,    typeInt) {int}
        [0001, 0057] (0027,   opBraces) {{}
        [0004, 0003] (0000,         id) {f}
        [0004, 0004] (0045,      comma) {,}
        [0004, 0006] (0000,         id) {g}
        [0004, 0008] (0008,     isType) {is}
        [0004, 0011] (0005, typeString) {string}
        [0004, 0017] (0045,      comma) {,}
        [0004, 0019] (0000,         id) {h}
        [0004, 0021] (0008,     isType) {is}
        [0004, 0024] (0003,   typeReal) {real}
        [0004, 0028] (0045,      comma) {,}
        [0004, 0030] (0000,         id) {i}
        [0004, 0032] (0008,     isType) {is}
        [0004, 0035] (0001,   typeBool) {bool}
        [0004, 0039] (0045,      comma) {,}
        [0004, 0041] (0000,         id) {g}
        [0004, 0043] (0008,     isType) {is}
        [0004, 0046] (0006,  typeArray) {array}
        [0004, 0051] (0029, opBrackets) {[}
        [0004, 0052] (0011,        int) {3}
        [0004, 0053] (0030, clBrackets) {]}
        [0004, 0055] (0009,         of) {of}
        [0004, 0058] (0002,    typeInt) {int}
        [0004, 0061] (0045,      comma) {,}
        [0004, 0063] (0000,         id) {h}
        [0004, 0065] (0008,     isType) {is}
        [0004, 0068] (0004,   typeChar) {char}
        [0004, 0072] (0045,      comma) {,}
        [0004, 0074] (0000,         id) {k}
        [0004, 0076] (0008,     isType) {is}
        [0004, 0079] (0002,    typeInt) {int}
        [0007, 0003] (0000,         id) {f}
        [0007, 0005] (0044,     attrib) {=}
        [0007, 0007] (0000,         id) {h}
        [0007, 0008] (0022,    opParen) {(}
        [0007, 0009] (0023,    clParen) {)}
        [0007, 0011] (0032,        exp) {**}
        [0007, 0014] (0031,      unary) {~}
        [0007, 0015] (0022,    opParen) {(}
        [0007, 0016] (0035,      minus) {-}
        [0007, 0017] (0022,    opParen) {(}
        [0007, 0018] (0031,      unary) {!}
        [0007, 0019] (0000,         id) {a}
        [0007, 0021] (0007,     asCast) {as}
        [0007, 0024] (0002,    typeInt) {int}
        [0007, 0027] (0023,    clParen) {)}
        [0007, 0028] (0023,    clParen) {)}
        [0007, 0030] (0035,      minus) {-}
        [0007, 0032] (0035,      minus) {-}
        [0007, 0033] (0012,       real) {0.5}
        [0007, 0037] (0033,       mult) {%}
        [0007, 0039] (0010,       bool) {true}
        [0007, 0044] (0033,       mult) {*}
        [0007, 0046] (0010,       bool) {false}
        [0007, 0052] (0033,       mult) {/}
        [0007, 0054] (0013,       char) {a}
        [0007, 0058] (0034,       plus) {+}
        [0007, 0060] (0014,     string) {b}
        [0007, 0064] (0035,      minus) {-}
        [0007, 0066] (0012,       real) {1e2}
        [0007, 0070] (0036,   bitShift) {<<}
        [0007, 0073] (0000,         id) {g}
        [0007, 0074] (0029, opBrackets) {[}
        [0007, 0075] (0011,        int) {1}
        [0007, 0076] (0030, clBrackets) {]}
        [0007, 0078] (0036,   bitShift) {>>}
        [0007, 0081] (0011,        int) {6}
        [0007, 0083] (0037, relational) {<}
        [0007, 0085] (0011,        int) {7}
        [0007, 0087] (0037, relational) {<=}
        [0007, 0090] (0011,        int) {8}
        [0007, 0092] (0037, relational) {>}
        [0007, 0094] (0011,        int) {9}
        [0007, 0096] (0037, relational) {>=}
        [0007, 0099] (0011,        int) {10}
        [0007, 0102] (0038,   eqOrDiff) {==}
        [0007, 0105] (0011,        int) {11}
        [0007, 0108] (0038,   eqOrDiff) {!=}
        [0007, 0111] (0011,        int) {12}
        [0007, 0114] (0040,     bitAnd) {&}
        [0007, 0116] (0011,        int) {13}
        [0007, 0119] (0039,     bitXor) {^}
        [0007, 0121] (0011,        int) {14}
        [0007, 0124] (0041,      bitOr) {|}
        [0007, 0126] (0011,        int) {15}
        [0007, 0129] (0042,   logicAnd) {&&}
        [0007, 0132] (0011,        int) {16}
        [0007, 0135] (0043,    logicOr) {||}
        [0007, 0138] (0011,        int) {17}
        [0010, 0003] (0019,      ifSel) {if}
        [0010, 0006] (0022,    opParen) {(}
        [0010, 0007] (0011,        int) {1}
        [0010, 0008] (0023,    clParen) {)}
        [0010, 0010] (0027,   opBraces) {{}
        [0010, 0011] (0028,   clBraces) {}}
        [0010, 0013] (0021,    elseSel) {else}
        [0010, 0018] (0019,      ifSel) {if}
        [0010, 0021] (0022,    opParen) {(}
        [0010, 0022] (0011,        int) {2}
        [0010, 0023] (0023,    clParen) {)}
        [0010, 0025] (0027,   opBraces) {{}
        [0010, 0026] (0028,   clBraces) {}}
        [0010, 0028] (0020,    elifSel) {elif}
        [0010, 0033] (0022,    opParen) {(}
        [0010, 0034] (0011,        int) {3}
        [0010, 0035] (0023,    clParen) {)}
        [0010, 0037] (0027,   opBraces) {{}
        [0010, 0038] (0028,   clBraces) {}}
        [0010, 0040] (0021,    elseSel) {else}
        [0010, 0045] (0027,   opBraces) {{}
        [0010, 0046] (0028,   clBraces) {}}
        [0013, 0003] (0000,         id) {h}
        [0013, 0004] (0022,    opParen) {(}
        [0013, 0005] (0023,    clParen) {)}
        [0013, 0006] (0045,      comma) {,}
        [0013, 0008] (0000,         id) {f}
        [0013, 0009] (0022,    opParen) {(}
        [0013, 0010] (0000,         id) {a}
        [0013, 0011] (0045,      comma) {,}
        [0013, 0013] (0000,         id) {b}
        [0013, 0014] (0045,      comma) {,}
        [0013, 0016] (0000,         id) {c}
        [0013, 0017] (0023,    clParen) {)}
        [0016, 0003] (0015,     repeat) {repeat}
        [0016, 0010] (0016,  whileLoop) {while}
        [0016, 0016] (0022,    opParen) {(}
        [0016, 0017] (0010,       bool) {false}
        [0016, 0022] (0023,    clParen) {)}
        [0016, 0024] (0027,   opBraces) {{}
        [0016, 0025] (0028,   clBraces) {}}
        [0017, 0003] (0015,     repeat) {repeat}
        [0017, 0010] (0022,    opParen) {(}
        [0017, 0011] (0000,         id) {i}
        [0017, 0013] (0044,     attrib) {=}
        [0017, 0015] (0011,        int) {1}
        [0017, 0017] (0034,       plus) {+}
        [0017, 0019] (0011,        int) {1}
        [0017, 0021] (0017,         to) {to}
        [0017, 0024] (0011,        int) {2}
        [0017, 0026] (0036,   bitShift) {<<}
        [0017, 0029] (0011,        int) {10}
        [0017, 0031] (0023,    clParen) {)}
        [0017, 0033] (0027,   opBraces) {{}
        [0017, 0034] (0028,   clBraces) {}}
        [0018, 0003] (0015,     repeat) {repeat}
        [0018, 0010] (0027,   opBraces) {{}
        [0018, 0011] (0028,   clBraces) {}}
        [0018, 0013] (0016,  whileLoop) {while}
        [0018, 0019] (0022,    opParen) {(}
        [0018, 0020] (0010,       bool) {true}
        [0018, 0024] (0023,    clParen) {)}
        [0019, 0003] (0015,     repeat) {repeat}
        [0019, 0010] (0022,    opParen) {(}
        [0019, 0011] (0000,         id) {i}
        [0019, 0013] (0044,     attrib) {=}
        [0019, 0015] (0011,        int) {1}
        [0019, 0017] (0034,       plus) {+}
        [0019, 0019] (0011,        int) {1}
        [0019, 0021] (0017,         to) {to}
        [0019, 0024] (0011,        int) {2}
        [0019, 0026] (0036,   bitShift) {<<}
        [0019, 0029] (0011,        int) {10}
        [0019, 0032] (0018,         at) {at}
        [0019, 0035] (0011,        int) {2}
        [0019, 0036] (0023,    clParen) {)}
        [0019, 0038] (0027,   opBraces) {{}
        [0019, 0039] (0028,   clBraces) {}}
        [0022, 0003] (0000,         id) {g}
        [0022, 0004] (0029, opBrackets) {[}
        [0022, 0005] (0011,        int) {0}
        [0022, 0006] (0030, clBrackets) {]}
        [0022, 0008] (0044,     attrib) {=}
        [0022, 0010] (0000,         id) {a}
        [0022, 0012] (0034,       plus) {+}
        [0022, 0014] (0000,         id) {c}
        [0022, 0015] (0045,      comma) {,}
        [0022, 0017] (0000,         id) {g}
        [0022, 0018] (0029, opBrackets) {[}
        [0022, 0019] (0011,        int) {1}
        [0022, 0020] (0030, clBrackets) {]}
        [0022, 0022] (0044,     attrib) {=}
        [0022, 0024] (0011,        int) {1707}
        [0025, 0003] (0000,         id) {n}
        [0025, 0005] (0008,     isType) {is}
        [0025, 0008] (0002,    typeInt) {int}
        [0025, 0011] (0045,      comma) {,}
        [0025, 0013] (0000,         id) {in}
        [0025, 0015] (0022,    opParen) {(}
        [0025, 0016] (0014,     string) {%int}
        [0025, 0022] (0045,      comma) {,}
        [0025, 0024] (0000,         id) {n}
        [0025, 0025] (0023,    clParen) {)}
        [0030, 0003] (0025,  returnFun) {return}
        [0030, 0010] (0000,         id) {g}
        [0031, 0001] (0028,   clBraces) {}}
        [0033, 0001] (0026, entryPoint) {@isEntryPoint}
        [0034, 0001] (0024,   function) {function}
        [0034, 0010] (0000,         id) {b}
        [0034, 0011] (0022,    opParen) {(}
        [0034, 0012] (0023,    clParen) {)}
        [0034, 0014] (0027,   opBraces) {{}
        [0036, 0003] (0025,  returnFun) {return}
        [0037, 0001] (0028,   clBraces) {}}
