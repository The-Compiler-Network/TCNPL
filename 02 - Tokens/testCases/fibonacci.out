function fibonacci(limit is int) {
        [0001, 0001] () {function}
        [0001, 0010] () {fibonacci}
        [0001, 0019] () {(}
        [0001, 0020] () {limit}
        [0001, 0026] () {is}
        [0001, 0029] () {int}
        [0001, 0032] () {)}
        [0001, 0034] () {{}
if (limit < 0) {
        [0002, 0005] () {if}
        [0002, 0009] () {(}
        [0002, 0010] () {limit}
        [0002, 0016] () {<}
        [0002, 0018] () {0}
        [0002, 0019] () {)}
        [0002, 0021] () {{}
return
        [0003, 0009] () {return}
}
        [0004, 0006] () {}}
a, b, aux is int
        [0005, 0005] () {a}
        [0005, 0007] () {,}
        [0005, 0009] () {b}
        [0005, 0010] () {,}
        [0005, 0012] () {aux}
        [0005, 0016] () {is}
        [0005, 0019] () {int}
a = 0
        [0006, 0005] () {a}
        [0006, 0008] () {=}
        [0006, 0010] () {0}
b = 1
        [0007, 0005] () {b}
        [0007, 0008] () {=}
        [0007, 0010] () {1}
textOut(format("%int", a))
        [0008, 0005] () {textOut}
        [0008, 0013] () {(}
        [0008, 0014] () {format}
        [0008, 0020] () {(}
        [0008, 0021] () {%int}
        [0008, 0027] () {,}
        [0008, 0029] () {a}
        [0008, 0030] () {)}
        [0008, 0031] () {)}
repeat while (a <= limit) {
        [0009, 0005] () {repeat}
        [0009, 0013] () {while}
        [0009, 0019] () {(}
        [0009, 0020] () {a}
        [0009, 0022] () {<}
        [0009, 0023] () {=}
        [0009, 0025] () {limit}
        [0009, 0030] () {)}
        [0009, 0032] () {{}
aux = a
        [0010, 0009] () {aux}
        [0010, 0015] () {=}
        [0010, 0017] () {a}
a = b
        [0011, 0009] () {a}
        [0011, 0013] () {=}
        [0011, 0015] () {b}
b = aux + b
        [0012, 0009] () {b}
        [0012, 0013] () {=}
        [0012, 0015] () {aux}
        [0012, 0019] () {+}
        [0012, 0021] () {b}
if (a <= limit) {
        [0013, 0009] () {if}
        [0013, 0014] () {(}
        [0013, 0015] () {a}
        [0013, 0017] () {<}
        [0013, 0018] () {=}
        [0013, 0020] () {limit}
        [0013, 0025] () {)}
        [0013, 0027] () {{}
textOut(format(", %int", a))
        [0014, 0013] () {textOut}
        [0014, 0023] () {(}
        [0014, 0024] () {format}
        [0014, 0030] () {(}
        [0014, 0031] () {, %int}
        [0014, 0039] () {,}
        [0014, 0041] () {a}
        [0014, 0042] () {)}
        [0014, 0043] () {)}
}
        [0015, 0011] () {}}
}
        [0016, 0006] () {}}
}
        [0017, 0001] () {}}