function shellSort(size is int, arr is array[] of int) {
        [0001, 0001] (0025,   function) {function}
        [0001, 0010] (0000,         id) {shellSort}
        [0001, 0019] (0023,    opParen) {(}
        [0001, 0020] (0000,         id) {size}
        [0001, 0025] (0008,     isType) {is}
        [0001, 0028] (0002,    typeInt) {int}
        [0001, 0031] (0045,      comma) {,}
        [0001, 0033] (0000,         id) {arr}
        [0001, 0037] (0008,     isType) {is}
        [0001, 0040] (0006,  typeArray) {array}
        [0001, 0045] (0030, opBrackets) {[}
        [0001, 0046] (0031, clBrackets) {]}
        [0001, 0048] (0000,         id) {of}
        [0001, 0051] (0002,    typeInt) {int}
        [0001, 0054] (0024,    clParen) {)}
        [0001, 0056] (0028,   opBraces) {{}
    h is int
        [0002, 0005] (0000,         id) {h}
        [0002, 0007] (0008,     isType) {is}
        [0002, 0010] (0002,    typeInt) {int}
    h = size / 3
        [0003, 0005] (0000,         id) {h}
        [0003, 0007] (0044,     attrib) {=}
        [0003, 0009] (0000,         id) {size}
        [0003, 0014] (0034,       mult) {/}
        [0003, 0016] (0011,        int) {3}
    repeat while (h > 0) {
        [0004, 0005] (0000,         id) {repeat}
        [0004, 0012] (0017,  whileLoop) {while}
        [0004, 0018] (0023,    opParen) {(}
        [0004, 0019] (0000,         id) {h}
        [0004, 0021] (0038, relational) {>}
        [0004, 0023] (0011,        int) {0}
        [0004, 0024] (0024,    clParen) {)}
        [0004, 0026] (0028,   opBraces) {{}
        i is int
        [0005, 0009] (0000,         id) {i}
        [0005, 0011] (0008,     isType) {is}
        [0005, 0014] (0002,    typeInt) {int}
        repeat (i = h to (size - 1)) {
        [0006, 0009] (0000,         id) {repeat}
        [0006, 0016] (0023,    opParen) {(}
        [0006, 0017] (0000,         id) {i}
        [0006, 0019] (0044,     attrib) {=}
        [0006, 0021] (0000,         id) {h}
        [0006, 0023] (0000,         id) {to}
        [0006, 0026] (0023,    opParen) {(}
        [0006, 0027] (0000,         id) {size}
        [0006, 0032] (0036,      minus) {-}
        [0006, 0034] (0011,        int) {1}
        [0006, 0035] (0024,    clParen) {)}
        [0006, 0036] (0024,    clParen) {)}
        [0006, 0038] (0028,   opBraces) {{}
            temp, j is int
        [0007, 0013] (0000,         id) {temp}
        [0007, 0017] (0045,      comma) {,}
        [0007, 0019] (0000,         id) {j}
        [0007, 0021] (0008,     isType) {is}
        [0007, 0024] (0002,    typeInt) {int}
            temp = arr[i]
        [0008, 0013] (0000,         id) {temp}
        [0008, 0018] (0044,     attrib) {=}
        [0008, 0020] (0000,         id) {arr}
        [0008, 0023] (0030, opBrackets) {[}
        [0008, 0024] (0000,         id) {i}
        [0008, 0025] (0031, clBrackets) {]}
            repeat while (j >= h && arr[j - h] > temp) {
        [0009, 0013] (0000,         id) {repeat}
        [0009, 0020] (0017,  whileLoop) {while}
        [0009, 0026] (0023,    opParen) {(}
        [0009, 0027] (0000,         id) {j}
        [0009, 0029] (0038, relational) {>=}
        [0009, 0032] (0000,         id) {h}
        [0009, 0034] (0040,     bitAnd) {&}
        [0009, 0035] (0040,     bitAnd) {&}
        [0009, 0037] (0000,         id) {arr}
        [0009, 0040] (0030, opBrackets) {[}
        [0009, 0041] (0000,         id) {j}
        [0009, 0043] (0036,      minus) {-}
        [0009, 0045] (0000,         id) {h}
        [0009, 0046] (0031, clBrackets) {]}
        [0009, 0048] (0038, relational) {>}
        [0009, 0050] (0000,         id) {temp}
        [0009, 0054] (0024,    clParen) {)}
        [0009, 0056] (0028,   opBraces) {{}
                arr[j] = a[j - h]
        [0010, 0017] (0000,         id) {arr}
        [0010, 0020] (0030, opBrackets) {[}
        [0010, 0021] (0000,         id) {j}
        [0010, 0022] (0031, clBrackets) {]}
        [0010, 0024] (0044,     attrib) {=}
        [0010, 0026] (0000,         id) {a}
        [0010, 0027] (0030, opBrackets) {[}
        [0010, 0028] (0000,         id) {j}
        [0010, 0030] (0036,      minus) {-}
        [0010, 0032] (0000,         id) {h}
        [0010, 0033] (0031, clBrackets) {]}
                j = j - h
        [0011, 0017] (0000,         id) {j}
        [0011, 0019] (0044,     attrib) {=}
        [0011, 0021] (0000,         id) {j}
        [0011, 0023] (0036,      minus) {-}
        [0011, 0025] (0000,         id) {h}
            }
        [0012, 0013] (0029,   clBraces) {}}
            arr[j] = temp
        [0013, 0013] (0000,         id) {arr}
        [0013, 0016] (0030, opBrackets) {[}
        [0013, 0017] (0000,         id) {j}
        [0013, 0018] (0031, clBrackets) {]}
        [0013, 0020] (0044,     attrib) {=}
        [0013, 0022] (0000,         id) {temp}
        }
        [0014, 0009] (0029,   clBraces) {}}
        h = h / 2
        [0015, 0009] (0000,         id) {h}
        [0015, 0011] (0044,     attrib) {=}
        [0015, 0013] (0000,         id) {h}
        [0015, 0015] (0034,       mult) {/}
        [0015, 0017] (0011,        int) {2}
    }
        [0016, 0005] (0029,   clBraces) {}}
}
        [0017, 0001] (0029,   clBraces) {}}